<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<HTML
><HEAD
><TITLE
>Servidor Web</TITLE
><META
NAME="GENERATOR"
CONTENT="Modular DocBook HTML Stylesheet Version 1.79"><LINK
REL="HOME"
TITLE="La distribución Aprendiendo de Jesús como servidor y cortafuegos"
HREF="book1.htm"><LINK
REL="UP"
TITLE="Protocolos de soporte y de usuario"
HREF="c1092.htm"><LINK
REL="PREVIOUS"
TITLE="Servidor ftp"
HREF="x2002.htm"><LINK
REL="NEXT"
TITLE="Otros servicios que puede prestar el servidor"
HREF="c2300.htm"></HEAD
><BODY
CLASS="sect1"
BGCOLOR="#FFFFFF"
TEXT="#000000"
LINK="#0000FF"
VLINK="#840084"
ALINK="#0000FF"
><DIV
CLASS="NAVHEADER"
><TABLE
SUMMARY="Header navigation table"
WIDTH="100%"
BORDER="0"
CELLPADDING="0"
CELLSPACING="0"
><TR
><TH
COLSPAN="3"
ALIGN="center"
>La distribución Aprendiendo de Jesús como servidor y cortafuegos</TH
></TR
><TR
><TD
WIDTH="10%"
ALIGN="left"
VALIGN="bottom"
><A
HREF="x2002.htm"
ACCESSKEY="P"
>Anterior</A
></TD
><TD
WIDTH="80%"
ALIGN="center"
VALIGN="bottom"
>Capítulo 5. Protocolos de soporte y de usuario</TD
><TD
WIDTH="10%"
ALIGN="right"
VALIGN="bottom"
><A
HREF="c2300.htm"
ACCESSKEY="N"
>Siguiente</A
></TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="100%"></DIV
><DIV
CLASS="sect1"
><H1
CLASS="sect1"
><A
NAME="sevidorweb"
>Servidor Web</A
></H1
><P
>&#13;		adJ y OpenBSD incluyen en el sistema base dos servidores 
		web: (1) una versión auditada de
		<B
CLASS="command"
>nginx 1.6.0</B
> y (2) su propio OpenBSD httpd.  
		En este capítulo detallamos la configuración y uso de cada
		uno, así como del paquete apache-httpd-openbsd que es
		el Apache 1.3.29 incluido hasta OpenBSD 5.5.
	</P
><DIV
CLASS="sect2"
><H2
CLASS="sect2"
><A
NAME="openbsd-httpd"
>OpenBSD httpd</A
></H2
><P
>&#13;		A continuación describimos algunos casos de uso 
		del nuevo <TT
CLASS="literal"
>httpd</TT
> que soporta  
		contenido estático, FastCGI sin reescritura y SSL.  
		Sus fuentes se basan en las de <TT
CLASS="literal"
>relayd</TT
>  que fue introducido y madurado en OpenBSD desde la versión 4.1 (inicialmente llamado <TT
CLASS="literal"
>hoststated</TT
>).
	</P
><DIV
CLASS="sect3"
><H3
CLASS="sect3"
><A
NAME="httpd-min"
>Configuración mínima</A
></H3
><P
>&#13;			En el archivo <TT
CLASS="literal"
>/etc/rc.conf.local</TT
> agregue:
			<PRE
CLASS="screen"
>&#13;	httpd_flags=""
			</PRE
>
			y en adJ agregue <TT
CLASS="literal"
>httpd</TT
> a la variable <TT
CLASS="literal"
>pkg_scripts</TT
>.
		</P
><P
>&#13;			Se configura en el archivo <TT
CLASS="literal"
>/etc/httpd.conf</TT
> cuya sintaxis tiene algunas similitudes con la de <TT
CLASS="literal"
>nginx</TT
> y con la de <TT
CLASS="literal"
>relayd</TT
>.  Puede constar de 4 secciones: macros, configuraciones globales, uno o más servidores y tipos.
		</P
><P
>&#13;			La sintaxis de la sección de tipos es idéntica a la de <TT
CLASS="literal"
>nginx</TT
> y como puede usarse <TT
CLASS="literal"
>include</TT
> para incluir otro archivo de configuración, el siguiente es un ejemplo mínimo (incluyendo el macro <TT
CLASS="literal"
>ext_ip</TT
>):
			<PRE
CLASS="screen"
>&#13;	ext_ip="200.201.202.203"
	server "default" {
		listen on $ext_ip port 80
	}
	include "/etc/nginx/mime.types"
			</PRE
>
		</P
><P
>&#13;			Podría probarlo iniciando en modo de depuración con:
			<PRE
CLASS="screen"
>&#13;	sudo httpd -vn
			</PRE
>

			Y examinando con un navegador la URL 
			<TT
CLASS="literal"
>http://200.201.202.203</TT
>, con lo que 
			vería el archivo <TT
CLASS="literal"
>/var/www/htdocs/index.html</TT
> 
			y notaría que:
			<P
></P
><UL
><LI
><P
>&#13;						Debido a la opción <TT
CLASS="literal"
>listen on $ext_ip port 80</TT
> serviría por el puerto 80 de 200.201.202.203.  En lugar de $ext_ip puede usar una interfaz o incluso un grupo como <TT
CLASS="literal"
>egress</TT
> para servir en todas las interfaces conectadas a Internet.
					</P
></LI
><LI
><P
>&#13;						Por defecto pondría una jaula chroot en <TT
CLASS="literal"
>/var/www</TT
>.  Esto podría modificarse en la sección de configuración, antes del primer <TT
CLASS="literal"
>server</TT
> y después del macro con la opción <TT
CLASS="literal"
>chroot <SPAN
CLASS="emphasis"
><I
CLASS="emphasis"
>directorio</I
></SPAN
></TT
>
					</P
></LI
><LI
><P
>&#13;						Iniciaría 3 procesos para servir páginas.  Esto puede modificarse en la sección de configuración con la opción <TT
CLASS="literal"
>prefork <SPAN
CLASS="emphasis"
><I
CLASS="emphasis"
>numero</I
></SPAN
></TT
>
					</P
></LI
><LI
><P
>&#13;						Que serviría los archivos de <TT
CLASS="literal"
>/var/www/htdocs</TT
>.  Esto puede modificarse  agregando la opción <TT
CLASS="literal"
>root <SPAN
CLASS="emphasis"
><I
CLASS="emphasis"
>directorio_relativo_a_jaula</I
></SPAN
></TT
> dentro de la sección <TT
CLASS="literal"
>server</TT
>.
					</P
></LI
></UL
>
		</P
></DIV
><DIV
CLASS="sect3"
><H3
CLASS="sect3"
><A
NAME="httpd-ssl"
>Servidor con cifrado</A
></H3
><P
>&#13;			Al ejemplo de configuración mínima anterior bastaría agregarle ssl a la opción listen e indicar el puerto 443, que es el asignado por defecto para HTTPS:
			<PRE
CLASS="screen"
>&#13;	ext_ip="200.201.202.203"
	server "default" {
		listen on $ext_ip ssl port 443
	}
	include "/etc/nginx/mime.types"
</PRE
>
		</P
><P
>&#13;			El certificado que emplea por defecto es el par <TT
CLASS="literal"
>/etc/ssl/server.crt</TT
> y <TT
CLASS="literal"
>/etc/ssl/private/server.key</TT
>.  Podría especificarse otro par con las opciones <TT
CLASS="literal"
>ssl certificate <SPAN
CLASS="emphasis"
><I
CLASS="emphasis"
>archivo</I
></SPAN
></TT
> y <TT
CLASS="literal"
>ssl key <SPAN
CLASS="emphasis"
><I
CLASS="emphasis"
>archivo</I
></SPAN
></TT
> dentro de la sección server.
		</P
></DIV
><DIV
CLASS="sect3"
><H3
CLASS="sect3"
><A
NAME="httpd-dom"
>Dominios virtuales</A
></H3
><P
>&#13;			Si la misma IP debe servir diversos dominios, cree una sección <TT
CLASS="literal"
>server</TT
> por cada dominio con el nombre del dominio y emplee la misma opcion <TT
CLASS="literal"
>listen</TT
> para todos y si es el caso directorios raices diferentes. 
		</P
><P
>&#13;			Si se configuraran los dominios www.miescuela.edu.co y www.otrodominio.co apuntando a la misma IP de los ejemplos anteriores y tiene las páginas de cada dominio en <TT
CLASS="literal"
>/var/www/htdocs/miescuela</TT
> y <TT
CLASS="literal"
>/var/www/htdocs/otrodominio</TT
>:

			<PRE
CLASS="screen"
>&#13;	ext_ip="200.201.202.203"
	server "www.miescuela.edu.co" {
		listen on $ext_ip port 80
		root /htdocs/miescuela
	}

	server "www.otrodominio.co" {
		listen on $ext_ip port 80
		root /htdocs/otrodominio
	}

	include "/etc/nginx/mime.types"
</PRE
>
		</P
></DIV
><DIV
CLASS="sect3"
><H3
CLASS="sect3"
><A
NAME="httpd-php"
>Sitio con PHP</A
></H3
><P
>&#13;			Es posible que sirva contenidos PHP usando php-fpm como FastCGI.  Sin embargo debe asegurar haber aplicado los parches más recientes para 5.6 (ya incluidos en binarios de adJ) y tener en cuenta que no soporta, y posiblemente no soportará reescritura de URLs.
		</P
><P
>&#13;			Una configuración mínima para SIVeL 1.2 que opere en 192.168.1.1, con archivos en <TT
CLASS="literal"
>/var/www/htdcos/sivel</TT
> y con SSL es:

			<PRE
CLASS="screen"
>&#13;	server "192.168.1.1" {
		listen on egress ssl port 443

		location "*.php" {
			fastcgi socket "/run/php-fpm.sock"
		}
		root "/htdocs/sivel/"
		include "/etc/nginx/mime.types"
	}
</PRE
>
		</P
><P
>&#13;
			Operará bien con la configuración por defecto de php-fpm, que puede instalar con:
			<PRE
CLASS="screen"
>&#13;	sudo pkg_add php-fpm
	sudo cp /usr/local/share/examples/php-5.4/php-fpm.conf /etc/
			</PRE
>
			e iniciar con:
			<PRE
CLASS="screen"
>&#13;	sudo sh /etc/rc.d/php-fpm start
			</PRE
>
			o mejor en cada arranque de su sistema editando <TT
CLASS="literal"
>/etc/rc.conf.local</TT
>
			y agregando
			<P
></P
><UL
><LI
><P
>&#13;						Agregar <TT
CLASS="literal"
>php_fpm_flags=""</TT
>
					</P
></LI
><LI
><P
>&#13;						A la variable <TT
CLASS="literal"
>pkg_scripts</TT
> añadir <TT
CLASS="literal"
>php-fpm</TT
>
					</P
></LI
></UL
>
		</P
></DIV
><DIV
CLASS="sect3"
><H3
CLASS="sect3"
><A
NAME="httpd-otros"
>Otros detalles de uso</A
></H3
><P
>&#13;					Si requiere volve a leer archivo de configuración, en lugar de reiniciar httpd puede ejecutar:
					<PRE
CLASS="screen"
>&#13;						pkill -HUP httpd
					</PRE
>
				</P
><P
>&#13;					El formato de las bitácoras por defecto es similar al de <TT
CLASS="literal"
>nginx</TT
>
				</P
></DIV
></DIV
><DIV
CLASS="sect2"
><H2
CLASS="sect2"
><A
NAME="nginx"
>Nginx</A
></H2
><P
>&#13;		OpenBSD y adJ incluyen nginx también entre 
		los componentes básicos.  Su archivo de configuración
		es <TT
CLASS="filename"
>/etc/nginx/nginx.conf</TT
>.
		Por defecto correra en una jaula en 
		<TT
CLASS="filename"
>/var/www</TT
>, puede iniciarlo 
		manualmente con:
		<PRE
CLASS="screen"
>&#13;			/etc/rc.d/nginx start
		</PRE
>
		y detenerlo con
		<PRE
CLASS="screen"
>&#13;			/etc/rc.d/nginx stop
		</PRE
>
		Para que inicie automáticamente en cada arranque 
		basta agregar en
		<TT
CLASS="filename"
>/etc/rc.conf.local</TT
>:
		<PRE
CLASS="screen"
>&#13;			nginx_flags=""
		</PRE
>
		y que añada <TT
CLASS="literal"
>nginx</TT
> en
		<TT
CLASS="literal"
>pkg_scripts</TT
>.
	</P
><DIV
CLASS="sect3"
><H3
CLASS="sect3"
><A
NAME="nginx-php"
>Uso de PHP con nginx</A
></H3
><P
>&#13;			No hay un módulo para PHP pero puede ejecutarse como Fast-CGI.  
			Esto puede lograrse por ejemplo con el paquete
			<TT
CLASS="literal"
>php-fpm-5.5.30</TT
>.   Este paquete incluye un
			servicio que se configura en <TT
CLASS="filename"
>/etc/php-fpm.conf</TT
>
			y que por defecto servirá en el puerto 9000.   Inicielo con
			<PRE
CLASS="screen"
>&#13;				sudo sh /etc/rc.d/php-fpm start
			</PRE
>
			o de manera permanente en cada arranque agregue <TT
CLASS="literal"
>php-fpm</TT
>
			en <TT
CLASS="literal"
>pkg_scripts</TT
> en <TT
CLASS="filename"
>/etc/rc.conf.local</TT
>.

			En el archivo de configuración de nginx agregue en la sección
			<TT
CLASS="literal"
>server</TT
> donde servirá Apache:
			<P
></P
><OL
TYPE="1"
><LI
><P
>En <TT
CLASS="literal"
>index</TT
> agregue 
						<TT
CLASS="literal"
>index.php</TT
></P
></LI
><LI
><P
>Adicione:
						<PRE
CLASS="screen"
>&#13;							location ~ \.php$ {
							fastcgi_pass   127.0.0.1:9000;
							fastcgi_index  index.php;
							fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
							include        fastcgi_params;
							}
					</PRE
></P
></LI
></OL
>
		</P
></DIV
></DIV
><DIV
CLASS="sect2"
><H2
CLASS="sect2"
><A
NAME="apache"
>Apache</A
></H2
><P
>adJ y OpenBSD cuentan con el porte de
		      transición <TT
CLASS="literal"
>apache-httpd-openbsd</TT
>
		      con el Apache 1.3.29 modificado que había en 
		      adJ/OpenBSD 5.5.   Este porte será descontinuado
		      por lo que es importante usarlo como porte de
		      transito bien a OpenBSD httpd o a nginx o a
		      Apache2.
</P
><P
>&#13;Instale el paquete:
<PRE
CLASS="screen"
>&#13;sudo pkg_add apache-httpd-openbsd
</PRE
>

En el archivo <TT
CLASS="literal"
>etc/rc.conf.local</TT
>  haga los siguientes cambios (parcialmente explicados en {2}):
# Renombre <TT
CLASS="literal"
>httpd_flags</TT
> por <TT
CLASS="literal"
>apache_flags</TT
>
# En la variable <TT
CLASS="literal"
>pkg_scripts</TT
> remplace <TT
CLASS="literal"
>httpd</TT
> por <TT
CLASS="literal"
>apache</TT
> (y  de requerirse saque <TT
CLASS="literal"
>nginx</TT
>).

</P
><P
>&#13;Modifique el archivo de configuración <TT
CLASS="literal"
>/var/www/conf/httpd.conf</TT
>, 
el cambio evidente es modificar la ruta de los módulos activos para que 
sean cargados de <TT
CLASS="literal"
>/usr/local/lib/apache/</TT
> en 
lugar de <TT
CLASS="literal"
>/usr/lib/apache</TT
>
</P
><P
>&#13;Puede probar reiniciar el servidor completo para asegurar que el Apache 1.3.29 arranca también, o bien iniciar sólo el servicio con:
<PRE
CLASS="screen"
>&#13;sudo sh /etc/rc.d/apache start
</PRE
>
</P
><P
>&#13;Este porte corre por defecto y
	para mayor seguridad con <B
CLASS="command"
>chroot</B
> en 
	<TT
CLASS="filename"
>/var/www</TT
>.  Es decir que desde el punto
	de vista de Apache la raíz del sistema es lo que hay en
	<TT
CLASS="filename"
>/var/www</TT
>.  Diversos portes o sus aplicaciones
	pueden requerir que Apache tenga acceso a otras partes del sistema,
	aunque no lo recomendamos puede lograrlo iniciando con el flag:
	<PRE
CLASS="screen"
>&#13;apache_flags="-u" </PRE
>
      </P
><P
>Para detener el servidor una vez esté corriendo puede emplear:
<PRE
CLASS="screen"
>&#13;# /etc/rc.d/apache stop
</PRE
>
Para iniciarlo o reiniciarlo con las opciones que haya configurado
en <TT
CLASS="filename"
>/etc/rc.conf.local</TT
>:
	<PRE
CLASS="screen"
>&#13;# /etc/rc.d/apache restart
	</PRE
>
</P
><DIV
CLASS="sect3"
><H3
CLASS="sect3"
><A
NAME="directorios-usuarios"
>Directorios para usuarios</A
></H3
><P
>El archivo de configuración por defecto
	(<TT
CLASS="filename"
>/var/www/conf/httpd.conf</TT
>) no incluye 
	directorios para usuarios. A partir de OpenBSD 3.4 se recomienda 
	que estos directorios se creen en <TT
CLASS="filename"
>/var/www/users</TT
>, 
	los activa estableciendo en el archivo de configuración:<PRE
CLASS="screen"
>&#13;UserDir /users </PRE
>
	o bien<PRE
CLASS="screen"
>&#13;UserDir /var/www/users </PRE
>
	el primer en caso de que corra Apache chroot y el segundo si no.
	En ambos casos se sugiere la siguiente secuencia para crear
	un directorio de publicación para el usuario pablo:
	<PRE
CLASS="screen"
>&#13;# cd /home/pablo
# mkdir /var/www/users/pablo
# ln -s /var/www/users/pablo public_html
# chown pablo:pablo /var/www/users/pablo
	</PRE
>

	Así el usuario podrá publicar sus archivos en su subdirectorio
	<TT
CLASS="filename"
>public_html</TT
> (como ocurre clásicamente) y
	desde un navegador local podrán verse con el URL:
	<TT
CLASS="literal"
>http://localhost/~pablo/</TT
> o remotamente
	con <TT
CLASS="literal"
>http://www.miescuela.edu.co/~pablo/</TT
>
      </P
></DIV
><DIV
CLASS="sect3"
><H3
CLASS="sect3"
><A
NAME="dominios-virtuales"
>Dominios virtuales</A
></H3
><P
>Empleado dominios virtuales (del inglés
	  <I
CLASS="foreignphrase"
>Virtual Hosting</I
>) es posible
	  manejar con un mismo servidor diversas direcciones DNS.  Para
	  activarlo:
	  <P
></P
><OL
TYPE="1"
><LI
><P
>En <TT
CLASS="filename"
>/var/www/conf/httpd.conf</TT
> no 
		emplee un alias para el directorio
		<TT
CLASS="filename"
>/</TT
></P
></LI
><LI
><P
>Si ejecuta Apache con <B
CLASS="command"
>chroot</B
> copie
		      <TT
CLASS="filename"
>/usr/local/lib/apache/modules/mod_vhost_alias.so</TT
>
		      en <TT
CLASS="filename"
>/var/www/usr/local/lib/apache/modules/</TT
></P
></LI
><LI
><P
>Agregue en <TT
CLASS="filename"
>/var/www/conf/httpd.conf</TT
>
		una línea del estilo:
		<PRE
CLASS="screen"
>&#13;NameVirtualHost 65.167.3.4
		</PRE
>
		remplazando la IP por la de su servidor
	      </P
><P
>Agregue un dominio virtual por cada dominio que maneje,
		por ejemplo:
		<PRE
CLASS="screen"
>&#13;&#60;VirtualHost 65.167.63.234&#62;
    ServerAdmin pablo@miescuela.edu.co
    DocumentRoot /var/www/htdocs
    ServerName www.miescuela.edu.co
    ServerAlias miescuela.edu.co
    ErrorLog logs/miescuela.edu.co-error_log
    Options ExecCgi Includes MultiViews Indexes FollowSymlinks 
    SymLinksIfOwnerMatch
    CustomLog logs/miescuela.edu.co-access_log common
&#60;/VirtualHost&#62;
		</PRE
>
	      </P
></LI
></OL
>
      </P
></DIV
><DIV
CLASS="sect3"
><H3
CLASS="sect3"
><A
NAME="ssl"
>SSL</A
></H3
><P
>&#13;
Para emplear SSL con Apache pueden seguirse las instrucciones 
del FAQ de OpenBSD que se retoman a continuación.  Debe generar
un certificado que pueda ser firmado por una Autoridad Certificadora
o por usted mismo.

<PRE
CLASS="screen"
>&#13;# openssl genrsa -out /etc/ssl/private/server.key 1024
# openssl req -new -key /etc/ssl/private/server.key \
       -out /etc/ssl/private/server.csr
</PRE
>

Tras el segundo paso debe ingresar el código del país (co para Colombia),
el departamento en el que está, la organización, la unidad dentro
de la organización y el nombre común (e.g la dirección web).  
</P
><P
>Después puede enviar el archivo 
<TT
CLASS="filename"
>/etc/ssl/private/server.csr</TT
>
a una entidad certificadora, la entidad certificadora la 
devolverá su certificado firmado (digamos <TT
CLASS="filename"
>sudominio.pem</TT
>) 
el cual debe ubicar en <TT
CLASS="filename"
>/etc/ssl/server.crt</TT
>.
Si prefiere firmar usted mismo su certificado emplee:
<PRE
CLASS="screen"
>&#13;openssl x509 -req -days 3650 -in /etc/ssl/private/server.csr \
      -signkey /etc/ssl/private/server.key -out /etc/ssl/server.crt
</PRE
>
</P
><P
>&#13;A continuación puede
<P
></P
><UL
><LI
><P
>agregar entre las opciones de Apache 
			<CODE
CLASS="option"
>-DSSL</CODE
> en 
			<TT
CLASS="filename"
>/etc/rc.conf.local</TT
></P
></LI
><LI
><P
>modificar 
<TT
CLASS="filename"
>/var/www/conf/httpd.conf</TT
> para que al usar SSL se
redireccione al directorio apropiado (digamos 
<TT
CLASS="filename"
>/var/www/users/sivel/</TT
>), i.e. remplazando algunas
líneas de la sección <TT
CLASS="literal"
>&#60;VirtualHost _default_:443&#62;</TT
>:
<PRE
CLASS="screen"
>&#13;	DocumentRoot /var/www/users/sivel
	ServerName miServidor
	ServerAdmin micorreo@midominio.org
	ErrorLog logs/error_log
	TransferLog logs/access_log
</PRE
>
		</P
></LI
><LI
><P
> Reiniciar el servidor con 
las opciones apropiadas, por ejemplo:
<PRE
CLASS="screen"
>&#13;sudo /etc/rc.d/apache restart
</PRE
>
		</P
></LI
></UL
>
Finalmente puede probar abriendo desde un navegador
<TT
CLASS="literal"
>https://Jesus.miescuela.edu.co</TT
>
</P
></DIV
><DIV
CLASS="sect3"
><H3
CLASS="sect3"
><A
NAME="php"
>PHP</A
></H3
><P
>Instale el paquete
		<TT
CLASS="literal"
>php-5.5.30</TT
>.
	  Después cree un enlace para activarlo en servidor web:
	  <PRE
CLASS="screen"
>&#13;ln -s /var/www/conf/modules.sample/php-5.4.conf \
	/var/www/conf/modules/php.conf
	  </PRE
>
	  y asegúrese de que las siguientes líneas estén en
	  <TT
CLASS="filename"
>/var/www/conf/httpd.conf</TT
>:
	  <PRE
CLASS="screen"
>&#13;		  LoadModule php5_module /usr/local/lib/apache/modules/libphp5.so

AddType application/x-httpd-php .php

DirectoryIndex index.html index.php
	  </PRE
>
	  Reinicie Apache  y pruebe la instalación de PHP por ejemplo
	  cargando desde un navegador un archivo <TT
CLASS="filename"
>prueba.php</TT
>
	  el cual debe tener el siguiente contenido:
	  <PRE
CLASS="screen"
>&#13;&#60;?php
  phpinfo();
?&#62;
	  </PRE
>
	</P
><DIV
CLASS="sect4"
><H4
CLASS="sect4"
><A
NAME="php-postgresql"
>Soporte para PostgreSQL en PHP</A
></H4
><P
>Para activar el soporte para PostgreSQL (ver <A
HREF="x2346.htm"
>la sección de nombre <I
>Motor de bases de datos PostgreSQL</I
> en Capítulo 6</A
>en PHP
      instale el paquete <TT
CLASS="literal"
>php-pgsql-5.5.30</TT
> y
      ejecute:
      <PRE
CLASS="screen"
>&#13;ln -fs /etc/php-5.4.sample/pgsql.ini \
	/etc/php-5.4/pgsql.ini
	    </PRE
>
	    Puede comprobar que esta extensión funciona revisando
	    la salida de la función <TT
CLASS="literal"
>phpinfo()</TT
>.
	</P
></DIV
><DIV
CLASS="sect4"
><H4
CLASS="sect4"
><A
NAME="lecturas-php"
>Lecturas recomendadas</A
></H4
><P
>Puede aprender sobre PHP en 
	    <A
HREF="http://www.php.net"
TARGET="_top"
>http://www.php.net</A
></P
><P
>La configuración de PHP con PostgreSQL y Apache corriendo 
	    con chroot puede verse en
	    <A
HREF="http://www.bsdforen.org/foren/showtopic.php?threadid=773"
TARGET="_top"
>http://www.bsdforen.org/foren/showtopic.php?threadid=773</A
> o en la sección sobre PostgreSQL 
    de estas guías (ver <A
HREF="x2346.htm"
>la sección de nombre <I
>Motor de bases de datos PostgreSQL</I
> en Capítulo 6</A
>
    </P
></DIV
></DIV
><DIV
CLASS="sect3"
><H3
CLASS="sect3"
><A
NAME="ssi"
>Server Side Include</A
></H3
><P
>El Apache incluido en OpenBSD tiene compilado como módulo
		estático <TT
CLASS="literal"
>mod_include.c</TT
> (como
		puede comprobarse ejecutando 
		<B
CLASS="command"
>/usr/sbin/httpd -l</B
>).  Por esto para
		activar SSI basta quitar los comentarios de las siguientes
		líneas en <TT
CLASS="filename"
>/var/www/conf/httpd.conf</TT
>:
		<PRE
CLASS="screen"
>&#13;AddType text/html .shtml
AddHandler server-parsed .shtml
		</PRE
>

		y en el directorio o directorios desde los que se quieren
		usar páginas con SSI (extensión <TT
CLASS="filename"
>.shtml</TT
>), 
		agregar entre las opciones:
		<PRE
CLASS="screen"
>&#13;Option Includes
		</PRE
>
		Si se desea que las páginas con extensión
		<TT
CLASS="filename"
>.html</TT
> sean reconocidas por el servidor,
		de forma que puedan incluir directivas SSI, deles permiso
		de ejecución y agregué después del <TT
CLASS="literal"
>AddHandler</TT
>
		antes mencionado:
		<PRE
CLASS="screen"
>&#13;XBitHack on
		</PRE
>
	</P
><P
>Tras reiniciar apache puede probar creando una página
		<TT
CLASS="filename"
>prueba.shtml</TT
> por ejemplo con:
		<PRE
CLASS="screen"
>&#13;&#60;html&#62;
	&#60;head&#62;&#60;title&#62;&#60;/title&#62;&#60;/head&#62;
	&#60;body&#62;
		&#60;!--#echo var="DATE_LOCAL" --&#62;
	&#60;/body&#62;
&#60;/html&#62; 
		</PRE
>
	Al abrirla debe presentar la fecha y hora del sistema.

	</P
><DIV
CLASS="sect4"
><H4
CLASS="sect4"
><A
NAME="lecturas-ssi"
>Lecturas recomendadas</A
></H4
><P
>Hay información completa sobre SSI en el manual de
		  Apache
		  <A
HREF="http://httpd.apache.org/docs/howto/ssi.html"
TARGET="_top"
>http://httpd.apache.org/docs/howto/ssi.html</A
>
	  </P
></DIV
></DIV
></DIV
></DIV
><DIV
CLASS="NAVFOOTER"
><HR
ALIGN="LEFT"
WIDTH="100%"><TABLE
SUMMARY="Footer navigation table"
WIDTH="100%"
BORDER="0"
CELLPADDING="0"
CELLSPACING="0"
><TR
><TD
WIDTH="33%"
ALIGN="left"
VALIGN="top"
><A
HREF="x2002.htm"
ACCESSKEY="P"
>Anterior</A
></TD
><TD
WIDTH="34%"
ALIGN="center"
VALIGN="top"
><A
HREF="book1.htm"
ACCESSKEY="H"
>Inicio</A
></TD
><TD
WIDTH="33%"
ALIGN="right"
VALIGN="top"
><A
HREF="c2300.htm"
ACCESSKEY="N"
>Siguiente</A
></TD
></TR
><TR
><TD
WIDTH="33%"
ALIGN="left"
VALIGN="top"
>Servidor <TT
CLASS="literal"
>ftp</TT
></TD
><TD
WIDTH="34%"
ALIGN="center"
VALIGN="top"
><A
HREF="c1092.htm"
ACCESSKEY="U"
>Subir</A
></TD
><TD
WIDTH="33%"
ALIGN="right"
VALIGN="top"
>Otros servicios que puede prestar el servidor</TD
></TR
></TABLE
></DIV
></BODY
></HTML
>